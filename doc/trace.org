#+startup:fold -*- buffer-read-only:t -*- 
# ------------------------------------------------------------------------------
# info on what is TRACE and how to use it
# ------------------------------------------------------------------------------
TRACE is a smart implementation of messaging very useful for debugging 
online applications with multiple processes communicating with each other.

TRACE is intrusive - using it requires instrumenting the application 
with TRACE statements and recompiling the application. 

However, the behaviour of the included TRACE statements can be controled 
from the command line without recompilation.

- user guide        : https://github.com/art-daq/trace/wiki/TRACE-Users-Guide
- TLVL_INFO and such: https://github.com/art-daq/trace/blob/develop/include/TRACE/tracemf2.h#L39-L43

#------------------------------------------------------------------------------
TLOG(TLVL_DEBUG) << "TrackerVST_generator CONSTRUCTOR";

 export TRACE_FILE=/tmp/trace_buffer_pasha.txt

- tshow : see messages that are sent to memory.
- tonM  : turn on additional messages to memory,
- tonS  : send those messages to the log files

 set format of TRACE printouts: TRACE_PRINT="%m-%d %H:%M:%S.%%06d %T %*n %*L %F: %M"

** TRACE masks: S(slow) M(memory) T(trigger)                                 
*** S (slow)   : controls printout directed to stdout
*** M (memory) : controls fast printout directed to the sharem memory buffer
*** T (trigger): controls triggering printout
** trace_cntl tids    : show control masks                                   
#+begin_src 
#mu2etrk@mu2edaq09:~/test_stand/pasha_018>tlvls
mode:                                                    M=1                S=1
 TID                                 NAME              maskM              maskS              maskT
---- ------------------------------------ ------------------ ------------------ ------------------
  24                 ConfigurationManager 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
  69           TopLevelTriggerTable_table 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
  72   dtcInterfaceLib/DTCSoftwareCFO.cpp 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
  82      ARTDAQRoutingManagerTable_table 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 135                      WorkLoopManager 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 139                 MacroMakerSupervisor 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 156                 AllSupervisorInfo.cc 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 159                       ReceiverSocket 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 175                              DTC.cpp 0x0000000000000fff 0x0000000000000000 0x0000000000000000
 191         SupervisorDescriptorInfoBase 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 200         ARTDAQBoardReaderTable_table 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 209                              my_cntl 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 211 options_operation_managedocument.cpp 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 226                          DTC_Packets 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 238                  ARTDAQSupervisor.cc 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 239                    MessageFacility.h 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 240                        CONF:LdStrD_C 0x00000000000001ff 0x0000000000000001 0x0000000000000000
 244                     ARTDAQSupervisor 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 259                        DTC_Registers 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 263                 dispatch_mongodb.cpp 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 268                                TRACE 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 280                       FileDB:RDWRT_C 0x00000000000001ff 0x0000000000000001 0x0000000000000000
 282                              Console 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 289                          _TCPConnect 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 303                              MU2EDEV 0x00000000ffffffff 0x00000000000001ff 0x0000000000000000
 311             configureMessageFacility 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 317                        CONF:CrtCfD_C 0x00000000000001ff 0x0000000000000001 0x0000000000000000
 328                     XDAQContextTable 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 352        MessageFacilityTable_table.cc 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 353       ARTDAQDataLoggerTable_table.cc 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 354                    ConsoleSupervisor 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 357                             Iterator 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 374                            Socket.cc 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 376                   FiniteStateMachine 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 386                               Socket 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 389                 CodeEditorSupervisor 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 403                         UDP_mfPlugin 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 416           options_operation_base.cpp 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 417                    ReceiverSocket.cc 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 420                               CfgGUI 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 433                              rocUtil 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 447          ARTDAQDataLoggerTable_table 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 456                        MetricManager 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 469               JSONDocument_utils.cpp 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 486                      json_writer.cpp 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 501                     VisualSupervisor 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 510                            DTC_Types 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 511                           mu2e_event 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 526              provider_connection.cpp 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 544            detail_managedocument.cpp 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 558     ARTDAQEventBuilderTable_table.cc 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 561                   CoreSupervisorBase 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 567                     JSONDocument.cpp 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 573                         COFS:DpFle_C 0x00000000000001ff 0x0000000000000001 0x0000000000000000
 574                               KERNEL 0x00000000000fffef 0x00000000000001ff 0x0000000000000000
 584                            mu2e_main 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 612           ConfigurationGUISupervisor 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 620                 provider_mongodb.cpp 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 641                                  FSM 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 642                     PRVDR:FileDBIX_C 0x00000000000001ff 0x0000000000000001 0x0000000000000000
 645                    GatewaySupervisor 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 652        ARTDAQEventBuilderTable_table 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 653                      JSNU:DocUtils_C 0x00000000000001ff 0x0000000000000001 0x0000000000000000
 656      ARTDAQBoardReaderTable_table.cc 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 664          ARTDAQDispatcherTable_table 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 678   ARTDAQRoutingManagerTable_table.cc 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 686           CorePropertySupervisorBase 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 688                    AllSupervisorInfo 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 690            FESlowControlsTable_table 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 700           MessageFacilityTable_table 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 706             detail_manageconfigs.cpp 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 728              DTCInterfaceTable_table 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 731               ConfigurationManagerRW 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 772                           trace_cntl 0x00000000ffffffff 0x00000000000001ff 0x0000000000000000
 776                             mu2eUtil 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 783                      ARTDAQTableBase 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 796                      JSNU:Document_C 0x00000000000001ff 0x0000000000000001 0x0000000000000000
 800                            TableBase 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 804       provider_mongodb_readwrite.cpp 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 820           DTCInterfaceTable_table.cc 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 824                             mu2e_mem 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 827                           Visualizer 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 863        TopLevelTriggerTable_table.cc 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 893                CoreSupervisorBase.cc 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 900                      json_reader.cpp 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 909      SupervisorDescriptorInfoBase.cc 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 912        CorePropertySupervisorBase.cc 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 917                    ConfigurationTree 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 942         FESlowControlsTable_table.cc 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 949                       CONF:OpLdStr_C 0x00000000000001ff 0x0000000000000001 0x0000000000000000
 955                             mu2e_pci 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 956               RunControlStateMachine 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 957                   WorkLoopManager.cc 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 961                               trace_ 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 969                           MacroMaker 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 973                              mu2edev 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 979              CodeEditorSupervisor.cc 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
 985                       PRVDR:FileDB_C 0x00000000000001ff 0x0000000000000001 0x0000000000000000
 995                             Fragment 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
1003                             WebUsers 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
1008       ARTDAQDispatcherTable_table.cc 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
1017                        CONF:OpBase_C 0x00000000000001ff 0x0000000000000001 0x0000000000000000
1018                  XDAQContextTable.cc 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
1021                              _TRACE_ 0x0000000000000fff 0x00000000000001ff 0x0000000000000000
+end_src

from Andy:
 
 #+begin_src
tonM -N DTC.cpp 0-1000
to set the debug level for DTC.cpp and then looking at the output with
tshow | less
#+end_src 

According to Andy, DTC.cpp is the source file name. Does this mean that the control 
is at source file level ?
** trace_cntl lvlclr  : clear mask bits                                      
*** clear 20 lowest bits in all masks for DTC_Registers                      
#+begin_src trace_cntl lvlclr                                               
mu2etrk@mu2edaq09:~/test_stand/pasha_018>trace_cntl lvlclr 0xfffff 0xfffff 0xfffff -NDTC_Registers
mu2etrk@mu2edaq09:~/test_stand/pasha_018>tlvls | grep DTC_R
 259                        DTC_Registers 0x0000000000000000 0x0000000000000000 0x0000000000000000
#+end_src 
*** clear bit 8 everywhere                                                   
#+begin_src 
trace_cntl lvlclr 0x100 0x100 0x100 -N*
#+end_src
** trace_cntl lvlset  : set mask bits (can run at a ROOT prompt)             
#+begin_src
trace_cntl lvlset -NDtcInterface_print 0x00000000000001ff 0x00000000000fffff 0x0000000000000000
#+end_src
** tonS                                                                      
#+begin_src
tonS () 
{ 
    trace_cntl lvlset 0 `bitN_to_mask "$@"` 0;
    trace_cntl modeS 1
}
#+end_src

bitN_to_mask 2-4 returns '0x1c'

* loooking at the TRACE memory log:                                          

tshow | tdelta -ct 1 -d 1 | head -n 100
* Ron's hints from different setup files and examples                        
 --  enable kernel trace to memory buffer:
#+test -f /proc/trace/buffer && { export TRACE_FILE=/proc/trace/buffer; tlvls | grep 'KERNEL 0xffffffff00ffffff' >/dev/null || { tonMg 0-63; toffM 24-31 -nKERNEL; }; }


if [ -d ${TRACE_BIN} ]; then 
  echo -e "setup [${LINENO}]  \t     Setting up TRACE defaults..."
  # echo Turning on all memory tracing via: tonMg 0-63 
  
  # Default setup moved from setup_trace to here so it can be disabled
  #${TRACE_BIN}/trace_cntl lvlmskg 0xfff 0x1ff 0  # <memory> <slow> <trigger>, tonSg 0-8 (debug is 8 := TLVL_{FATAL,ALERT,CRIT,ERROR,WARNING,NOTICE,INFO,LOG,DEBUG}) OBSOLETE as of 8/08/2023
  ${TRACE_BIN}/trace_cntl mode 3   # ton*
  
  # Disable some very verbose trace outputs 
  TRACE_NAMLVLSET="\
CONF:LdStrD_C    0x1ff 0 0
FileDB:RDWRT_C   0x1ff 0 0
CONF:CrtCfD_C    0x1ff 0 0
COFS:DpFle_C     0x1ff 0 0
PRVDR:FileDBIX_C 0x1ff 0 0
JSNU:DocUtils_C  0x1ff 0 0
JSNU:Document_C  0x1ff 0 0
CONF:OpLdStr_C   0x1ff 0 0
PRVDR:FileDB_C   0x1ff 0 0
CONF:OpBase_C    0x1ff 0 0
" $TRACE_BIN/trace_cntl namlvlset
fi

** using debug+x semantics int tonM                                          
 tonM -N*:farm_manager.py debug+1-debug+20
* from ROOT command prompt                                                   
#+begin_src
root[0] .! trace_cntl lvlset -NDtcInterface 0 0x4 ; trace_cntl modeS 1; trace_cntl tids
#+end_src
* ------------------------------------------------------------------------------
* back to [[file:frontends.org][frontends]]
* ------------------------------------------------------------------------------
